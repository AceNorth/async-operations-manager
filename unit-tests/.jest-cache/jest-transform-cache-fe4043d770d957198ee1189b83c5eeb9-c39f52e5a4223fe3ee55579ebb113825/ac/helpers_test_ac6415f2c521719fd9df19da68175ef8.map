{"version":3,"sources":["helpers_test.js"],"names":["_chai","require","_sinon","_interopRequireDefault","_config","_helpers","obj","__esModule","default","describe","beforeEach","setConfig","logger","exceptionsCallback","spy","it","asyncOperationKey","generateAsyncOperationKey","expect","to","equal","personId","teamId","_asyncOperationManage","getConfig","undefined","called","callCount","_asyncOperationManage2","params","name","asyncOperationDescriptor","requiredParams","asyncOperationParams","getAndValidateParams","deep","_asyncOperationManage3","_asyncOperationManage4","fruits","makeConstantsObject","APPLE","BANANA","isExtensible","be","true"],"mappings":"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","file":"helpers_test.js","sourcesContent":["\"use strict\";\n\nvar _chai = require(\"chai\");\n\nvar _sinon = _interopRequireDefault(require(\"sinon\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nvar _helpers = require(\"../helpers\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-env jest */\ndescribe('helpers', () => {\n  beforeEach(() => {\n    _config.default.setConfig({\n      logger: {\n        exceptionsCallback: _sinon.default.spy()\n      }\n    });\n  });\n  describe('generateAsyncOperationKey', () => {\n    it('should create an asyncOperation key with no params', () => {\n      const asyncOperationKey = (0, _helpers.generateAsyncOperationKey)('updatePersonData');\n      (0, _chai.expect)(asyncOperationKey).to.equal('updatePersonData');\n    });\n    it('should create an asyncOperation key with one param', () => {\n      const asyncOperationKey = (0, _helpers.generateAsyncOperationKey)('updatePersonData', {\n        personId: 111\n      });\n      (0, _chai.expect)(asyncOperationKey).to.equal('updatePersonData_111');\n    });\n    it('should create an asyncOperation key with multiple params', () => {\n      const asyncOperationKey = (0, _helpers.generateAsyncOperationKey)('updatePersonData', {\n        teamId: 222,\n        personId: 111\n      });\n      (0, _chai.expect)(asyncOperationKey).to.equal('updatePersonData_222_111');\n    });\n    it('should throw an exception if a label is not provided', () => {\n      const _asyncOperationManage = _config.default.getConfig(),\n            logger = _asyncOperationManage.logger;\n\n      (0, _helpers.generateAsyncOperationKey)();\n      (0, _helpers.generateAsyncOperationKey)('');\n      (0, _helpers.generateAsyncOperationKey)(undefined);\n      (0, _chai.expect)(logger.exceptionsCallback.called).to.equal(true);\n      (0, _chai.expect)(logger.exceptionsCallback.callCount).to.equal(3);\n    });\n    it('should throw an exception if a label is not a string', () => {\n      const _asyncOperationManage2 = _config.default.getConfig(),\n            logger = _asyncOperationManage2.logger;\n\n      (0, _helpers.generateAsyncOperationKey)({});\n      (0, _helpers.generateAsyncOperationKey)([]);\n      (0, _helpers.generateAsyncOperationKey)(2);\n      (0, _chai.expect)(logger.exceptionsCallback.called).to.equal(true);\n      (0, _chai.expect)(logger.exceptionsCallback.callCount).to.equal(3);\n    });\n  });\n  describe('getAndValidateParams', () => {\n    beforeEach(() => {\n      _config.default.setConfig({\n        logger: {\n          exceptionsCallback: _sinon.default.spy()\n        }\n      });\n    });\n    it('should validate and successfully return correct asyncOperation params', () => {\n      const params = {\n        personId: 2,\n        teamId: 10,\n        name: 'Darien'\n      };\n      const asyncOperationDescriptor = {\n        requiredParams: ['personId', 'teamId']\n      };\n      const asyncOperationParams = (0, _helpers.getAndValidateParams)(params, asyncOperationDescriptor);\n      (0, _chai.expect)(asyncOperationParams).to.deep.equal({\n        personId: 2,\n        teamId: 10\n      });\n    });\n    it('should validate and fail on an undefined param', () => {\n      const _asyncOperationManage3 = _config.default.getConfig(),\n            logger = _asyncOperationManage3.logger;\n\n      const params = {\n        personId: undefined,\n        teamId: 10,\n        name: 'Darien'\n      };\n      const asyncOperationDescriptor = {\n        requiredParams: ['personId', 'teamId']\n      };\n      (0, _helpers.getAndValidateParams)(params, asyncOperationDescriptor);\n      (0, _chai.expect)(logger.exceptionsCallback.called).to.equal(true);\n    });\n    it('should validate and fail on a missing param', () => {\n      const _asyncOperationManage4 = _config.default.getConfig(),\n            logger = _asyncOperationManage4.logger;\n\n      const params = {\n        personId: 2,\n        name: 'Darien'\n      };\n      const asyncOperationDescriptor = {\n        requiredParams: ['personId', 'teamId']\n      };\n      (0, _helpers.getAndValidateParams)(params, asyncOperationDescriptor);\n      (0, _chai.expect)(logger.exceptionsCallback.called).to.equal(true);\n    });\n  });\n  describe('makeConstantsObject', () => {\n    beforeEach(() => {\n      _config.default.setConfig({\n        logger: {\n          exceptionsCallback: _sinon.default.spy()\n        }\n      });\n    });\n    it('should make a constants object out of an array of string values', () => {\n      const fruits = (0, _helpers.makeConstantsObject)(['APPLE', 'BANANA']);\n      (0, _chai.expect)(fruits).to.deep.equal({\n        APPLE: 'APPLE',\n        BANANA: 'BANANA'\n      });\n    });\n    it('should make a constants object that is immutable', () => {\n      const fruits = (0, _helpers.makeConstantsObject)(['APPLE', 'BANANA']);\n      (0, _chai.expect)(fruits.isExtensible()).to.be.true;\n    });\n  });\n});"]}