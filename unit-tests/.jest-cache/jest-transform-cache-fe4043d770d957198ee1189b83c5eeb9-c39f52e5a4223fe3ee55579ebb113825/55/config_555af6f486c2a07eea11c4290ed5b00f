c5803574777195df237119de81d60cb5
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("core-js/modules/web.dom.iterable");

var _defaultLoggerOptions = require("./defaultLoggerOptions");

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};var ownKeys = Object.keys(source);if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }return obj;
}

const initialConfig = {
  logger: _defaultLoggerOptions.defaultLoggerOptions
};

const asyncOperationManagerConfig = (() => {
  let config;

  const getConfig = () => {
    if (!config) {
      config = initialConfig;
    }

    return config;
  };

  const setConfig = newConfig => {
    config = _objectSpread({}, config, newConfig);
    return config;
  };

  return {
    setConfig,
    getConfig
  };
})();

var _default = asyncOperationManagerConfig;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJyZXF1aXJlIiwiX2RlZmF1bHRMb2dnZXJPcHRpb25zIiwiX29iamVjdFNwcmVhZCIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJvd25LZXlzIiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImNvbmNhdCIsImZpbHRlciIsInN5bSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJmb3JFYWNoIiwia2V5IiwiX2RlZmluZVByb3BlcnR5Iiwib2JqIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJpbml0aWFsQ29uZmlnIiwibG9nZ2VyIiwiZGVmYXVsdExvZ2dlck9wdGlvbnMiLCJhc3luY09wZXJhdGlvbk1hbmFnZXJDb25maWciLCJjb25maWciLCJnZXRDb25maWciLCJzZXRDb25maWciLCJuZXdDb25maWciLCJfZGVmYXVsdCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE9BQU9DLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQzNDQyxTQUFPO0FBRG9DLENBQTdDO0FBR0FELFFBQVFFLE9BQVIsR0FBa0IsS0FBSyxDQUF2Qjs7QUFFQUMsUUFBUSxrQ0FBUjs7QUFFQSxJQUFJQyx3QkFBd0JELFFBQVEsd0JBQVIsQ0FBNUI7O0FBRUEsU0FBU0UsYUFBVCxDQUF1QkMsTUFBdkIsRUFBK0I7QUFBRSxPQUFLLElBQUlDLElBQUksQ0FBYixFQUFnQkEsSUFBSUMsVUFBVUMsTUFBOUIsRUFBc0NGLEdBQXRDLEVBQTJDO0FBQUUsUUFBSUcsU0FBU0YsVUFBVUQsQ0FBVixLQUFnQixJQUFoQixHQUF1QkMsVUFBVUQsQ0FBVixDQUF2QixHQUFzQyxFQUFuRCxDQUF1RCxJQUFJSSxVQUFVYixPQUFPYyxJQUFQLENBQVlGLE1BQVosQ0FBZCxDQUFtQyxJQUFJLE9BQU9aLE9BQU9lLHFCQUFkLEtBQXdDLFVBQTVDLEVBQXdEO0FBQUVGLGdCQUFVQSxRQUFRRyxNQUFSLENBQWVoQixPQUFPZSxxQkFBUCxDQUE2QkgsTUFBN0IsRUFBcUNLLE1BQXJDLENBQTRDLFVBQVVDLEdBQVYsRUFBZTtBQUFFLGVBQU9sQixPQUFPbUIsd0JBQVAsQ0FBZ0NQLE1BQWhDLEVBQXdDTSxHQUF4QyxFQUE2Q0UsVUFBcEQ7QUFBaUUsT0FBOUgsQ0FBZixDQUFWO0FBQTRKLEtBQUNQLFFBQVFRLE9BQVIsQ0FBZ0IsVUFBVUMsR0FBVixFQUFlO0FBQUVDLHNCQUFnQmYsTUFBaEIsRUFBd0JjLEdBQXhCLEVBQTZCVixPQUFPVSxHQUFQLENBQTdCO0FBQTRDLEtBQTdFO0FBQWlGLEdBQUMsT0FBT2QsTUFBUDtBQUFnQjs7QUFFamUsU0FBU2UsZUFBVCxDQUF5QkMsR0FBekIsRUFBOEJGLEdBQTlCLEVBQW1DbkIsS0FBbkMsRUFBMEM7QUFBRSxNQUFJbUIsT0FBT0UsR0FBWCxFQUFnQjtBQUFFeEIsV0FBT0MsY0FBUCxDQUFzQnVCLEdBQXRCLEVBQTJCRixHQUEzQixFQUFnQyxFQUFFbkIsT0FBT0EsS0FBVCxFQUFnQmlCLFlBQVksSUFBNUIsRUFBa0NLLGNBQWMsSUFBaEQsRUFBc0RDLFVBQVUsSUFBaEUsRUFBaEM7QUFBMEcsR0FBNUgsTUFBa0k7QUFBRUYsUUFBSUYsR0FBSixJQUFXbkIsS0FBWDtBQUFtQixHQUFDLE9BQU9xQixHQUFQO0FBQWE7O0FBRWpOLE1BQU1HLGdCQUFnQjtBQUNwQkMsVUFBUXRCLHNCQUFzQnVCO0FBRFYsQ0FBdEI7O0FBSUEsTUFBTUMsOEJBQThCLENBQUMsTUFBTTtBQUN6QyxNQUFJQyxNQUFKOztBQUVBLFFBQU1DLFlBQVksTUFBTTtBQUN0QixRQUFJLENBQUNELE1BQUwsRUFBYTtBQUNYQSxlQUFTSixhQUFUO0FBQ0Q7O0FBRUQsV0FBT0ksTUFBUDtBQUNELEdBTkQ7O0FBUUEsUUFBTUUsWUFBWUMsYUFBYTtBQUM3QkgsYUFBU3hCLGNBQWMsRUFBZCxFQUFrQndCLE1BQWxCLEVBQTBCRyxTQUExQixDQUFUO0FBQ0EsV0FBT0gsTUFBUDtBQUNELEdBSEQ7O0FBS0EsU0FBTztBQUNMRSxhQURLO0FBRUxEO0FBRkssR0FBUDtBQUlELENBcEJtQyxHQUFwQzs7QUFzQkEsSUFBSUcsV0FBV0wsMkJBQWY7QUFDQTVCLFFBQVFFLE9BQVIsR0FBa0IrQixRQUFsQiIsImZpbGUiOiJjb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxucmVxdWlyZShcImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlXCIpO1xuXG52YXIgX2RlZmF1bHRMb2dnZXJPcHRpb25zID0gcmVxdWlyZShcIi4vZGVmYXVsdExvZ2dlck9wdGlvbnNcIik7XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyB2YXIgb3duS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7IGlmICh0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gJ2Z1bmN0aW9uJykgeyBvd25LZXlzID0gb3duS2V5cy5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwgc3ltKS5lbnVtZXJhYmxlOyB9KSk7IH0gb3duS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxuY29uc3QgaW5pdGlhbENvbmZpZyA9IHtcbiAgbG9nZ2VyOiBfZGVmYXVsdExvZ2dlck9wdGlvbnMuZGVmYXVsdExvZ2dlck9wdGlvbnNcbn07XG5cbmNvbnN0IGFzeW5jT3BlcmF0aW9uTWFuYWdlckNvbmZpZyA9ICgoKSA9PiB7XG4gIGxldCBjb25maWc7XG5cbiAgY29uc3QgZ2V0Q29uZmlnID0gKCkgPT4ge1xuICAgIGlmICghY29uZmlnKSB7XG4gICAgICBjb25maWcgPSBpbml0aWFsQ29uZmlnO1xuICAgIH1cblxuICAgIHJldHVybiBjb25maWc7XG4gIH07XG5cbiAgY29uc3Qgc2V0Q29uZmlnID0gbmV3Q29uZmlnID0+IHtcbiAgICBjb25maWcgPSBfb2JqZWN0U3ByZWFkKHt9LCBjb25maWcsIG5ld0NvbmZpZyk7XG4gICAgcmV0dXJuIGNvbmZpZztcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIHNldENvbmZpZyxcbiAgICBnZXRDb25maWdcbiAgfTtcbn0pKCk7XG5cbnZhciBfZGVmYXVsdCA9IGFzeW5jT3BlcmF0aW9uTWFuYWdlckNvbmZpZztcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdfQ==