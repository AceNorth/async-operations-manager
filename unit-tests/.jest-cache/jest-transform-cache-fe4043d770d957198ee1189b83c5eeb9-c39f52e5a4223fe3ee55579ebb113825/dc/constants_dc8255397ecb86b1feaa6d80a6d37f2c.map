{"version":3,"sources":["constants.js"],"names":["Object","defineProperty","exports","value","DATA_STATUS","FETCH_STATUS","ASYNC_OPERATION_STEPS","ASYNC_OPERATION_TYPES","readAsyncOperationFieldsToPullFromParent","_helpers","require","makeConstantsObject"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,SAAO;AADoC,CAA7C;AAGAD,QAAQE,WAAR,GAAsBF,QAAQG,YAAR,GAAuBH,QAAQI,qBAAR,GAAgCJ,QAAQK,qBAAR,GAAgCL,QAAQM,wCAAR,GAAmD,KAAK,CAArK;;AAEA,IAAIC,WAAWC,QAAQ,WAAR,CAAf;;AAEA,MAAMF,2CAA2C,CAAC,aAAD,EAAgB,YAAhB,EAA8B,qBAA9B,EAAqD,oBAArD,CAAjD;AACAN,QAAQM,wCAAR,GAAmDA,wCAAnD;AACA,MAAMF,wBAAwB,CAAC,GAAGG,SAASE,mBAAb,EAAkC,CAAC,uBAAD,EAA0B,yBAA1B,EAAqD,wBAArD,CAAlC,CAA9B;AACAT,QAAQI,qBAAR,GAAgCA,qBAAhC;AACA,MAAMC,wBAAwB,CAAC,GAAGE,SAASE,mBAAb,EAAkC,CAAC,MAAD,EAAS,OAAT,CAAlC,CAA9B;AACA;;;;AAIAT,QAAQK,qBAAR,GAAgCA,qBAAhC;AACA,MAAMF,eAAe,CAAC,GAAGI,SAASE,mBAAb,EAAkC,CAAC;AACxD,MADuD,EAC/C;AACR,SAFuD,EAE5C;AACX,YAHuD,EAGzC;AACd;AACA;AACA;AACA,QAPuD,CAAlC,CAArB;AAQA;;;;AAIAT,QAAQG,YAAR,GAAuBA,YAAvB;AACA,MAAMD,cAAc,CAAC,GAAGK,SAASE,mBAAb,EAAkC,CAAC;AACvD,QADsD,EAC5C;AACV,SAFsD,CAAlC,CAApB;AAGAT,QAAQE,WAAR,GAAsBA,WAAtB","file":"constants.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DATA_STATUS = exports.FETCH_STATUS = exports.ASYNC_OPERATION_STEPS = exports.ASYNC_OPERATION_TYPES = exports.readAsyncOperationFieldsToPullFromParent = void 0;\n\nvar _helpers = require(\"./helpers\");\n\nconst readAsyncOperationFieldsToPullFromParent = ['fetchStatus', 'dataStatus', 'lastFetchStatusTime', 'lastDataStatusTime'];\nexports.readAsyncOperationFieldsToPullFromParent = readAsyncOperationFieldsToPullFromParent;\nconst ASYNC_OPERATION_STEPS = (0, _helpers.makeConstantsObject)(['BEGIN_ASYNC_OPERATION', 'RESOLVE_ASYNC_OPERATION', 'REJECT_ASYNC_OPERATION']);\nexports.ASYNC_OPERATION_STEPS = ASYNC_OPERATION_STEPS;\nconst ASYNC_OPERATION_TYPES = (0, _helpers.makeConstantsObject)(['READ', 'WRITE']);\n/**\n * In general this is used to note the status of the last fetch attempted for a backend operation.\n */\n\nexports.ASYNC_OPERATION_TYPES = ASYNC_OPERATION_TYPES;\nconst FETCH_STATUS = (0, _helpers.makeConstantsObject)([// Default: we haven't tried to fetch yet\n'NULL', // Indicates that a request is in flight.\n'PENDING', // Indicates that the request completed and all is well\n'SUCCESSFUL', // Indicates that something went wrong: the request didn't complete, or it completed with\n// an http, payload/parsing, or business logic error.\n// @TODO: Should we distinguish between \"request completed by result failed\" vs\n//        \"request didn't complete due to timeout or network error\"?\n'FAILED']);\n/**\n * In general this is used to note the presence of data for a specific backend operation.\n */\n\nexports.FETCH_STATUS = FETCH_STATUS;\nconst DATA_STATUS = (0, _helpers.makeConstantsObject)([// Default: we haven't received anything\n'ABSENT', // Result was received and we have data\n'PRESENT']);\nexports.DATA_STATUS = DATA_STATUS;"]}