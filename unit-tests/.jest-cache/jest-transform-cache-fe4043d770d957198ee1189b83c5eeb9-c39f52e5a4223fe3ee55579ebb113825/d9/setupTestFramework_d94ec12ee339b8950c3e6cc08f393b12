e0ea4657ce2d60f1bca081e6bd5524dd
/* eslint-env jasmine, jest */
/* global global */
const path = require('path');

const chai = require('chai');
const chaiJestSnapshot = require('chai-jest-snapshot');

const jasmineReporters = require('jasmine-reporters');

// We do snapshot testing with Chai, to detect when things render differently than they did
// the last time we ran the unit tests.
chai.use(chaiJestSnapshot);

// We use the JUnitXml reporter for Jasmine, for CI on Jenkins.
//
// This snippet is blatantly stolen from https://github.com/JoeDevine/jest-jasmine-reporters-example
// (and just adjusted to make the linter happy and to set a custom output dir)
jasmine.VERBOSE = true;
jasmine.getEnv().addReporter(new jasmineReporters.JUnitXmlReporter({
  consolidateAll: false,
  savePath: path.join(__dirname, 'junit-xml-output/'),
  filePrefix: 'test-results-'
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldHVwVGVzdEZyYW1ld29yay5qcyJdLCJuYW1lcyI6WyJwYXRoIiwicmVxdWlyZSIsImNoYWkiLCJjaGFpSmVzdFNuYXBzaG90IiwiamFzbWluZVJlcG9ydGVycyIsInVzZSIsImphc21pbmUiLCJWRVJCT1NFIiwiZ2V0RW52IiwiYWRkUmVwb3J0ZXIiLCJKVW5pdFhtbFJlcG9ydGVyIiwiY29uc29saWRhdGVBbGwiLCJzYXZlUGF0aCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJmaWxlUHJlZml4Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EsTUFBTUEsT0FBT0MsUUFBUSxNQUFSLENBQWI7O0FBRUEsTUFBTUMsT0FBT0QsUUFBUSxNQUFSLENBQWI7QUFDQSxNQUFNRSxtQkFBbUJGLFFBQVEsb0JBQVIsQ0FBekI7O0FBRUEsTUFBTUcsbUJBQW1CSCxRQUFRLG1CQUFSLENBQXpCOztBQUdBO0FBQ0E7QUFDQUMsS0FBS0csR0FBTCxDQUFTRixnQkFBVDs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBRyxRQUFRQyxPQUFSLEdBQWtCLElBQWxCO0FBQ0FELFFBQVFFLE1BQVIsR0FBaUJDLFdBQWpCLENBQ0UsSUFBSUwsaUJBQWlCTSxnQkFBckIsQ0FBc0M7QUFDcENDLGtCQUFnQixLQURvQjtBQUVwQ0MsWUFBVVosS0FBS2EsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLG1CQUFyQixDQUYwQjtBQUdwQ0MsY0FBWTtBQUh3QixDQUF0QyxDQURGIiwiZmlsZSI6InNldHVwVGVzdEZyYW1ld29yay5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgamFzbWluZSwgamVzdCAqL1xuLyogZ2xvYmFsIGdsb2JhbCAqL1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxuY29uc3QgY2hhaSA9IHJlcXVpcmUoJ2NoYWknKTtcbmNvbnN0IGNoYWlKZXN0U25hcHNob3QgPSByZXF1aXJlKCdjaGFpLWplc3Qtc25hcHNob3QnKVxuXG5jb25zdCBqYXNtaW5lUmVwb3J0ZXJzID0gcmVxdWlyZSgnamFzbWluZS1yZXBvcnRlcnMnKTtcblxuXG4vLyBXZSBkbyBzbmFwc2hvdCB0ZXN0aW5nIHdpdGggQ2hhaSwgdG8gZGV0ZWN0IHdoZW4gdGhpbmdzIHJlbmRlciBkaWZmZXJlbnRseSB0aGFuIHRoZXkgZGlkXG4vLyB0aGUgbGFzdCB0aW1lIHdlIHJhbiB0aGUgdW5pdCB0ZXN0cy5cbmNoYWkudXNlKGNoYWlKZXN0U25hcHNob3QpO1xuXG5cbi8vIFdlIHVzZSB0aGUgSlVuaXRYbWwgcmVwb3J0ZXIgZm9yIEphc21pbmUsIGZvciBDSSBvbiBKZW5raW5zLlxuLy9cbi8vIFRoaXMgc25pcHBldCBpcyBibGF0YW50bHkgc3RvbGVuIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL0pvZURldmluZS9qZXN0LWphc21pbmUtcmVwb3J0ZXJzLWV4YW1wbGVcbi8vIChhbmQganVzdCBhZGp1c3RlZCB0byBtYWtlIHRoZSBsaW50ZXIgaGFwcHkgYW5kIHRvIHNldCBhIGN1c3RvbSBvdXRwdXQgZGlyKVxuamFzbWluZS5WRVJCT1NFID0gdHJ1ZTtcbmphc21pbmUuZ2V0RW52KCkuYWRkUmVwb3J0ZXIoXG4gIG5ldyBqYXNtaW5lUmVwb3J0ZXJzLkpVbml0WG1sUmVwb3J0ZXIoe1xuICAgIGNvbnNvbGlkYXRlQWxsOiBmYWxzZSxcbiAgICBzYXZlUGF0aDogcGF0aC5qb2luKF9fZGlybmFtZSwgJ2p1bml0LXhtbC1vdXRwdXQvJyksXG4gICAgZmlsZVByZWZpeDogJ3Rlc3QtcmVzdWx0cy0nLFxuICB9KVxuKTtcbiJdfQ==