{"version":3,"sources":["asyncOperationStateUtils.js"],"names":["Object","defineProperty","exports","value","default","_lodash","require","_propTypes","_interopRequireDefault","_config","_constants","_helpers","_types","_asyncOperationUtils","obj","__esModule","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","configurable","writable","updateAsyncOperationDescriptor","asyncOperationDescriptors","descriptorOptions","asyncOperationDescriptor","debug","parentOperationDescriptorId","alwaysImmutable","minCacheTime","maxCacheTime","checkPropTypes","asyncOperationDescriptorPropType","descriptorId","getAsyncOperationDescriptor","config","getConfig","logger","warningsCallback","verboseLoggingCallback","infoLoggingCallback","getAsyncOperation","state","registeredAsyncOperationDescriptors","asyncOperationKey","asyncOperationParams","fieldsToAdd","fieldsToAddToAction","parentAsyncOperation","asyncOperation","parentAsyncOperationDescriptor","parentAsyncOperationParams","getAndValidateParams","parentAsyncOperationKey","generateAsyncOperationKey","operationType","ASYNC_OPERATION_TYPES","READ","initialReadAsyncOperationForAction","initialWriteAsyncOperationForAction","lastDataStatusTime","valueOf","pick","readAsyncOperationFieldsToPullFromParent","updateAsyncOperation","asyncOperationPropType","bulkUpdateAsyncOperations","asyncOperationsList","reduce","accumulator","_ref","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = require(\"lodash\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _config = _interopRequireDefault(require(\"./config\"));\n\nvar _constants = require(\"./constants\");\n\nvar _helpers = require(\"./helpers\");\n\nvar _types = require(\"./types\");\n\nvar _asyncOperationUtils = require(\"./asyncOperationUtils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar updateAsyncOperationDescriptor = function updateAsyncOperationDescriptor(asyncOperationDescriptors, descriptorOptions) {\n  var asyncOperationDescriptor = _objectSpread({\n    debug: false,\n    parentOperationDescriptorId: null,\n    alwaysImmutable: false,\n    minCacheTime: 5000,\n    maxCacheTime: 60000\n  }, descriptorOptions);\n\n  _propTypes.default.checkPropTypes(_types.asyncOperationDescriptorPropType, asyncOperationDescriptor, 'prop', 'asyncOperationDescriptor');\n\n  return _objectSpread({}, asyncOperationDescriptors, _defineProperty({}, asyncOperationDescriptor.descriptorId, asyncOperationDescriptor));\n}; // validate whether the asyncOperationDescriptor exists\n\n\nvar getAsyncOperationDescriptor = function getAsyncOperationDescriptor(asyncOperationDescriptors, descriptorId) {\n  var config = _config.default.getConfig();\n\n  var asyncOperationDescriptor = asyncOperationDescriptors[descriptorId];\n\n  if (!asyncOperationDescriptor) {\n    config.logger.warningsCallback(\"descriptorId \\\"\".concat(descriptorId, \"\\\" does not match with any registered async operation descriptor\"));\n    return null;\n  }\n\n  if (asyncOperationDescriptor.debug) {\n    config.logger.verboseLoggingCallback(\"Inside getAsyncOperationDescriptor for \".concat(descriptorId));\n    config.logger.infoLoggingCallback('getAsyncOperationDescriptor [Data Snapshot]:', {\n      asyncOperationDescriptors: asyncOperationDescriptors,\n      asyncOperationDescriptor: asyncOperationDescriptor\n    });\n  }\n\n  return asyncOperationDescriptor;\n}; // This function will do all the work to determine if an async operation is returned as an initial async operation\n// (if it is not found in state), an asyncOperation with parentAsyncOperation metaData (recursively searched to find if the parentAsyncOperation is more\n// up-to-date) or just the asyncOperation itself if the none of the above apply.\n\n\nvar getAsyncOperation = function getAsyncOperation(state, registeredAsyncOperationDescriptors, asyncOperationKey, asyncOperationDescriptor, asyncOperationParams, fieldsToAdd) {\n  var config = _config.default.getConfig();\n\n  var fieldsToAddToAction = _objectSpread({}, asyncOperationParams, fieldsToAdd, {\n    // key for the descriptor of the asyncOperation\n    descriptorId: asyncOperationDescriptor.descriptorId\n  });\n\n  var parentAsyncOperation;\n  var asyncOperation = state[asyncOperationKey] || null;\n\n  if (asyncOperationDescriptor.parentOperationDescriptorId) {\n    // grab key, descriptor, params, and async operation for parentAsyncOperation\n    var parentAsyncOperationDescriptor = getAsyncOperationDescriptor(registeredAsyncOperationDescriptors, asyncOperationDescriptor.parentOperationDescriptorId);\n    var parentAsyncOperationParams = (0, _helpers.getAndValidateParams)(asyncOperationParams, parentAsyncOperationDescriptor);\n    var parentAsyncOperationKey = (0, _helpers.generateAsyncOperationKey)(asyncOperationDescriptor.parentOperationDescriptorId, parentAsyncOperationParams);\n    parentAsyncOperation = getAsyncOperation(state, registeredAsyncOperationDescriptors, parentAsyncOperationKey, parentAsyncOperationDescriptor, asyncOperationParams, fieldsToAddToAction);\n  }\n\n  if (asyncOperationDescriptor.debug) {\n    config.logger.verboseLoggingCallback(\"Inside getAsyncOperation for \".concat(asyncOperationKey));\n    config.logger.infoLoggingCallback('getAsyncOperation [Data Snapshot]:', {\n      state: state,\n      asyncOperationParams: asyncOperationParams,\n      asyncOperationDescriptor: asyncOperationDescriptor,\n      asyncOperation: asyncOperation,\n      asyncOperationKey: asyncOperationKey\n    });\n  }\n\n  if (!asyncOperation) {\n    if (asyncOperationDescriptor.debug) {\n      config.logger.verboseLoggingCallback(\"asyncOperation not found with given key: \".concat(asyncOperationKey, \". Defaulting to an initial asyncOperation\"));\n    }\n\n    asyncOperation = asyncOperationDescriptor.operationType === _constants.ASYNC_OPERATION_TYPES.READ ? (0, _asyncOperationUtils.initialReadAsyncOperationForAction)(asyncOperationDescriptor.descriptorId, fieldsToAddToAction, parentAsyncOperation) : (0, _asyncOperationUtils.initialWriteAsyncOperationForAction)(asyncOperationDescriptor.descriptorId, fieldsToAddToAction, parentAsyncOperation);\n  } // We want to determine whether or not to use that parentAsyncOperation metaData based on the\n  // newness of it's data in comparison to the asyncOperation\n\n\n  if (parentAsyncOperation && asyncOperation) {\n    return parentAsyncOperation.lastDataStatusTime.valueOf() > asyncOperation.lastDataStatusTime.valueOf() ? _objectSpread({}, asyncOperation, (0, _lodash.pick)(parentAsyncOperation, _constants.readAsyncOperationFieldsToPullFromParent)) : asyncOperation;\n  }\n\n  return asyncOperation;\n};\n\nvar updateAsyncOperation = function updateAsyncOperation(state, asyncOperationKey, asyncOperation, asyncOperationDescriptor) {\n  var config = _config.default.getConfig();\n\n  if (asyncOperationDescriptor.debug) {\n    config.logger.verboseLoggingCallback(\"Inside updateAsyncOperation for \".concat(asyncOperationKey));\n    config.logger.infoLoggingCallback('updateAsyncOperation [Data Snapshot]:', {\n      state: state,\n      asyncOperationDescriptor: asyncOperationDescriptor,\n      asyncOperation: asyncOperation,\n      asyncOperationKey: asyncOperationKey\n    });\n  }\n\n  _propTypes.default.checkPropTypes(_types.asyncOperationPropType, asyncOperation, 'prop', 'asyncOperation');\n\n  return _objectSpread({}, state, _defineProperty({}, asyncOperationKey, asyncOperation));\n};\n\nvar bulkUpdateAsyncOperations = function bulkUpdateAsyncOperations(state, asyncOperationsList) {\n  return (0, _lodash.reduce)(asyncOperationsList, function (accumulator, _ref) {\n    var asyncOperationKey = _ref.asyncOperationKey,\n        asyncOperation = _ref.asyncOperation,\n        asyncOperationDescriptor = _ref.asyncOperationDescriptor;\n    return updateAsyncOperation(accumulator, asyncOperationKey, asyncOperation, asyncOperationDescriptor);\n  }, state);\n};\n\nvar _default = {\n  updateAsyncOperationDescriptor: updateAsyncOperationDescriptor,\n  updateAsyncOperation: updateAsyncOperation,\n  bulkUpdateAsyncOperations: bulkUpdateAsyncOperations,\n  getAsyncOperation: getAsyncOperation,\n  getAsyncOperationDescriptor: getAsyncOperationDescriptor\n};\nexports.default = _default;"]}