e25ea52c3a9862c8156a14f146ecf397
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getAndValidateParams = exports.generateAsyncOperationKey = exports.makeConstantsObject = void 0;

var _lodash = _interopRequireDefault(require("lodash"));

var _config = _interopRequireDefault(require("./config"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
} // TODO: JSDocify every function


var makeConstantsObject = function makeConstantsObject() {
  var sourceValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var extraOverrides = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return Object.freeze( // The keyBy create our keys-and-values object, then we manipulate it and freeze it.s
  _lodash.default.assign(_lodash.default.keyBy(sourceValues), extraOverrides));
};

exports.makeConstantsObject = makeConstantsObject;

var generateAsyncOperationKey = function generateAsyncOperationKey(descriptorId, requiredParams) {
  var config = _config.default.getConfig();

  if (!descriptorId || !_lodash.default.isString(descriptorId)) {
    config.logger.exceptionsCallback('A descriptorId string to create the async operation key was not provided');
  }

  if (requiredParams) {
    return "".concat(descriptorId, "_").concat(_lodash.default.values(requiredParams).join('_'));
  }

  return descriptorId;
};

exports.generateAsyncOperationKey = generateAsyncOperationKey;

var getAndValidateParams = function getAndValidateParams(paramsToCheck, asyncOperationDescriptor) {
  var asyncOperationParams = null;

  var _asyncOperationManger = _config.default.getConfig(),
      logger = _asyncOperationManger.logger;

  if (asyncOperationDescriptor.requiredParams) {
    asyncOperationParams = asyncOperationDescriptor.requiredParams ? _lodash.default.pick(paramsToCheck, asyncOperationDescriptor.requiredParams) : null;

    if (!_lodash.default.every(asyncOperationDescriptor.requiredParams, _lodash.default.partial(_lodash.default.has, asyncOperationParams)) || asyncOperationParams && _lodash.default.some(asyncOperationParams, function (paramValue) {
      return !paramValue;
    })) {
      // This warning is here just to catch typos
      logger.exceptionsCallback("\n        It looks like ".concat(asyncOperationDescriptor.descriptorId, " is missing a param/requiredParams.\n        requiredParams provided: : ").concat(asyncOperationParams, "\n        requiredParams: : ").concat(asyncOperationDescriptor.requiredParams, "\n      "));
    }
  }

  return asyncOperationParams;
};

exports.getAndValidateParams = getAndValidateParams;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXRBbmRWYWxpZGF0ZVBhcmFtcyIsImdlbmVyYXRlQXN5bmNPcGVyYXRpb25LZXkiLCJtYWtlQ29uc3RhbnRzT2JqZWN0IiwiX2xvZGFzaCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2NvbmZpZyIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0Iiwic291cmNlVmFsdWVzIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiZXh0cmFPdmVycmlkZXMiLCJmcmVlemUiLCJhc3NpZ24iLCJrZXlCeSIsImRlc2NyaXB0b3JJZCIsInJlcXVpcmVkUGFyYW1zIiwiY29uZmlnIiwiZ2V0Q29uZmlnIiwiaXNTdHJpbmciLCJsb2dnZXIiLCJleGNlcHRpb25zQ2FsbGJhY2siLCJjb25jYXQiLCJ2YWx1ZXMiLCJqb2luIiwicGFyYW1zVG9DaGVjayIsImFzeW5jT3BlcmF0aW9uRGVzY3JpcHRvciIsImFzeW5jT3BlcmF0aW9uUGFyYW1zIiwiX2FzeW5jT3BlcmF0aW9uTWFuZ2VyIiwicGljayIsImV2ZXJ5IiwicGFydGlhbCIsImhhcyIsInNvbWUiLCJwYXJhbVZhbHVlIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsRUFBQUEsS0FBSyxFQUFFO0FBRG9DLENBQTdDO0FBR0FELE9BQU8sQ0FBQ0Usb0JBQVIsR0FBK0JGLE9BQU8sQ0FBQ0cseUJBQVIsR0FBb0NILE9BQU8sQ0FBQ0ksbUJBQVIsR0FBOEIsS0FBSyxDQUF0Rzs7QUFFQSxJQUFJQyxPQUFPLEdBQUdDLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsUUFBRCxDQUFSLENBQXBDOztBQUVBLElBQUlDLE9BQU8sR0FBR0Ysc0JBQXNCLENBQUNDLE9BQU8sQ0FB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MkMsVUFBVU8sVUFBVixFQUFzQjtBQUNsTyxhQUFPLENBQUNBLFVBQVI7QUFDRCxLQUZrSyxDQUFuSyxFQUVJO0FBQ0Y7QUFDQWQsTUFBQUEsTUFBTSxDQUFDQyxrQkFBUCxDQUEwQiwyQkFBMkJDLE1BQTNCLENBQWtDSSx3QkFBd0IsQ0FBQ1gsWUFBM0QsRUFBeUUsMEVBQXpFLEVBQXFKTyxNQUFySixDQUE0Skssb0JBQTVKLEVBQWtMLDhCQUFsTCxFQUFrTkwsTUFBbE4sQ0FBeU5JLHdCQUF3QixDQUFDVixjQUFsUCxFQUFrUSxVQUFsUSxDQUExQjtBQUNEO0FBQ0Y7O0FBRUQsU0FBT1csb0JBQVA7QUFDRCxDQWxCRDs7QUFvQkFoQyxPQUFPLENBQUNFLG9CQUFSLEdBQStCQSxvQkFBL0IiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZ2V0QW5kVmFsaWRhdGVQYXJhbXMgPSBleHBvcnRzLmdlbmVyYXRlQXN5bmNPcGVyYXRpb25LZXkgPSBleHBvcnRzLm1ha2VDb25zdGFudHNPYmplY3QgPSB2b2lkIDA7XG5cbnZhciBfbG9kYXNoID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwibG9kYXNoXCIpKTtcblxudmFyIF9jb25maWcgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2NvbmZpZ1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIFRPRE86IEpTRG9jaWZ5IGV2ZXJ5IGZ1bmN0aW9uXG52YXIgbWFrZUNvbnN0YW50c09iamVjdCA9IGZ1bmN0aW9uIG1ha2VDb25zdGFudHNPYmplY3QoKSB7XG4gIHZhciBzb3VyY2VWYWx1ZXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFtdO1xuICB2YXIgZXh0cmFPdmVycmlkZXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICByZXR1cm4gT2JqZWN0LmZyZWV6ZSggLy8gVGhlIGtleUJ5IGNyZWF0ZSBvdXIga2V5cy1hbmQtdmFsdWVzIG9iamVjdCwgdGhlbiB3ZSBtYW5pcHVsYXRlIGl0IGFuZCBmcmVlemUgaXQuc1xuICBfbG9kYXNoLmRlZmF1bHQuYXNzaWduKF9sb2Rhc2guZGVmYXVsdC5rZXlCeShzb3VyY2VWYWx1ZXMpLCBleHRyYU92ZXJyaWRlcykpO1xufTtcblxuZXhwb3J0cy5tYWtlQ29uc3RhbnRzT2JqZWN0ID0gbWFrZUNvbnN0YW50c09iamVjdDtcblxudmFyIGdlbmVyYXRlQXN5bmNPcGVyYXRpb25LZXkgPSBmdW5jdGlvbiBnZW5lcmF0ZUFzeW5jT3BlcmF0aW9uS2V5KGRlc2NyaXB0b3JJZCwgcmVxdWlyZWRQYXJhbXMpIHtcbiAgdmFyIGNvbmZpZyA9IF9jb25maWcuZGVmYXVsdC5nZXRDb25maWcoKTtcblxuICBpZiAoIWRlc2NyaXB0b3JJZCB8fCAhX2xvZGFzaC5kZWZhdWx0LmlzU3RyaW5nKGRlc2NyaXB0b3JJZCkpIHtcbiAgICBjb25maWcubG9nZ2VyLmV4Y2VwdGlvbnNDYWxsYmFjaygnQSBkZXNjcmlwdG9ySWQgc3RyaW5nIHRvIGNyZWF0ZSB0aGUgYXN5bmMgb3BlcmF0aW9uIGtleSB3YXMgbm90IHByb3ZpZGVkJyk7XG4gIH1cblxuICBpZiAocmVxdWlyZWRQYXJhbXMpIHtcbiAgICByZXR1cm4gXCJcIi5jb25jYXQoZGVzY3JpcHRvcklkLCBcIl9cIikuY29uY2F0KF9sb2Rhc2guZGVmYXVsdC52YWx1ZXMocmVxdWlyZWRQYXJhbXMpLmpvaW4oJ18nKSk7XG4gIH1cblxuICByZXR1cm4gZGVzY3JpcHRvcklkO1xufTtcblxuZXhwb3J0cy5nZW5lcmF0ZUFzeW5jT3BlcmF0aW9uS2V5ID0gZ2VuZXJhdGVBc3luY09wZXJhdGlvbktleTtcblxudmFyIGdldEFuZFZhbGlkYXRlUGFyYW1zID0gZnVuY3Rpb24gZ2V0QW5kVmFsaWRhdGVQYXJhbXMocGFyYW1zVG9DaGVjaywgYXN5bmNPcGVyYXRpb25EZXNjcmlwdG9yKSB7XG4gIHZhciBhc3luY09wZXJhdGlvblBhcmFtcyA9IG51bGw7XG5cbiAgdmFyIF9hc3luY09wZXJhdGlvbk1hbmdlciA9IF9jb25maWcuZGVmYXVsdC5nZXRDb25maWcoKSxcbiAgICAgIGxvZ2dlciA9IF9hc3luY09wZXJhdGlvbk1hbmdlci5sb2dnZXI7XG5cbiAgaWYgKGFzeW5jT3BlcmF0aW9uRGVzY3JpcHRvci5yZXF1aXJlZFBhcmFtcykge1xuICAgIGFzeW5jT3BlcmF0aW9uUGFyYW1zID0gYXN5bmNPcGVyYXRpb25EZXNjcmlwdG9yLnJlcXVpcmVkUGFyYW1zID8gX2xvZGFzaC5kZWZhdWx0LnBpY2socGFyYW1zVG9DaGVjaywgYXN5bmNPcGVyYXRpb25EZXNjcmlwdG9yLnJlcXVpcmVkUGFyYW1zKSA6IG51bGw7XG5cbiAgICBpZiAoIV9sb2Rhc2guZGVmYXVsdC5ldmVyeShhc3luY09wZXJhdGlvbkRlc2NyaXB0b3IucmVxdWlyZWRQYXJhbXMsIF9sb2Rhc2guZGVmYXVsdC5wYXJ0aWFsKF9sb2Rhc2guZGVmYXVsdC5oYXMsIGFzeW5jT3BlcmF0aW9uUGFyYW1zKSkgfHwgYXN5bmNPcGVyYXRpb25QYXJhbXMgJiYgX2xvZGFzaC5kZWZhdWx0LnNvbWUoYXN5bmNPcGVyYXRpb25QYXJhbXMsIGZ1bmN0aW9uIChwYXJhbVZhbHVlKSB7XG4gICAgICByZXR1cm4gIXBhcmFtVmFsdWU7XG4gICAgfSkpIHtcbiAgICAgIC8vIFRoaXMgd2FybmluZyBpcyBoZXJlIGp1c3QgdG8gY2F0Y2ggdHlwb3NcbiAgICAgIGxvZ2dlci5leGNlcHRpb25zQ2FsbGJhY2soXCJcXG4gICAgICAgIEl0IGxvb2tzIGxpa2UgXCIuY29uY2F0KGFzeW5jT3BlcmF0aW9uRGVzY3JpcHRvci5kZXNjcmlwdG9ySWQsIFwiIGlzIG1pc3NpbmcgYSBwYXJhbS9yZXF1aXJlZFBhcmFtcy5cXG4gICAgICAgIHJlcXVpcmVkUGFyYW1zIHByb3ZpZGVkOiA6IFwiKS5jb25jYXQoYXN5bmNPcGVyYXRpb25QYXJhbXMsIFwiXFxuICAgICAgICByZXF1aXJlZFBhcmFtczogOiBcIikuY29uY2F0KGFzeW5jT3BlcmF0aW9uRGVzY3JpcHRvci5yZXF1aXJlZFBhcmFtcywgXCJcXG4gICAgICBcIikpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhc3luY09wZXJhdGlvblBhcmFtcztcbn07XG5cbmV4cG9ydHMuZ2V0QW5kVmFsaWRhdGVQYXJhbXMgPSBnZXRBbmRWYWxpZGF0ZVBhcmFtczsiXX0=