<?xml version="1.0" encoding="UTF-8" ?>
<testsuites disabled="0" errors="0" failures="0" tests="11" time="0.042">
 <testsuite name="asyncOperationStateUtils" timestamp="2018-11-19T21:18:43" hostname="localhost" time="0.022" errors="0" tests="0" skipped="0" disabled="0" failures="0">
 </testsuite>
 <testsuite name="asyncOperationStateUtils.updateAsyncOperationDescriptor" timestamp="2018-11-19T21:18:43" hostname="localhost" time="0.011" errors="0" tests="3" skipped="0" disabled="0" failures="0">
  <testcase classname="asyncOperationStateUtils.updateAsyncOperationDescriptor" name="should update state with an asyncOperationDescriptor" time="0.007" />
  <testcase classname="asyncOperationStateUtils.updateAsyncOperationDescriptor" name="should update state with an asyncOperationDescriptor and default optional values" time="0.002" />
  <testcase classname="asyncOperationStateUtils.updateAsyncOperationDescriptor" name="should throw an error if required descriptorId prop is not passed" time="0.001" />
 </testsuite>
 <testsuite name="asyncOperationStateUtils.updateAsyncOperation" timestamp="2018-11-19T21:18:44" hostname="localhost" time="0.001" errors="0" tests="1" skipped="0" disabled="0" failures="0">
  <testcase classname="asyncOperationStateUtils.updateAsyncOperation" name="should update state with an asyncOperation" time="0.001" />
 </testsuite>
 <testsuite name="asyncOperationStateUtils.bulkUpdateAsyncOperations" timestamp="2018-11-19T21:18:44" hostname="localhost" time="0.001" errors="0" tests="1" skipped="0" disabled="0" failures="0">
  <testcase classname="asyncOperationStateUtils.bulkUpdateAsyncOperations" name="should update state with multiple async operations" time="0.001" />
 </testsuite>
 <testsuite name="asyncOperationStateUtils.getAsyncOperation" timestamp="2018-11-19T21:18:44" hostname="localhost" time="0.007" errors="0" tests="6" skipped="0" disabled="0" failures="0">
  <testcase classname="asyncOperationStateUtils.getAsyncOperation" name="should return an initial read asyncOperation" time="0.001" />
  <testcase classname="asyncOperationStateUtils.getAsyncOperation" name="should return an initial write asyncOperation" time="0.001" />
  <testcase classname="asyncOperationStateUtils.getAsyncOperation" name="should return a pending asyncOperation" time="0.001" />
  <testcase classname="asyncOperationStateUtils.getAsyncOperation" name="should return a successful asyncOperation" time="0.001" />
  <testcase classname="asyncOperationStateUtils.getAsyncOperation" name="should return a successful asyncOperation with parentAsyncOperation metaData" time="0.001" />
  <testcase classname="asyncOperationStateUtils.getAsyncOperation" name="should return a successful asyncOperation with parentAsyncOperation metaData two levels deep" time="0.002" />
 </testsuite>
</testsuites>