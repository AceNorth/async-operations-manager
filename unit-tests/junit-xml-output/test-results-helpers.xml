<?xml version="1.0" encoding="UTF-8" ?>
<testsuites disabled="0" errors="0" failures="1" tests="10" time="0.062">
 <testsuite name="helpers" timestamp="2018-11-17T12:52:53" hostname="localhost" time="0.031" errors="0" tests="0" skipped="0" disabled="0" failures="0">
 </testsuite>
 <testsuite name="helpers.generateAsyncOperationKey" timestamp="2018-11-17T12:52:53" hostname="localhost" time="0.011" errors="0" tests="5" skipped="0" disabled="0" failures="0">
  <testcase classname="helpers.generateAsyncOperationKey" name="should create an asyncOperation key with no params" time="0.003" />
  <testcase classname="helpers.generateAsyncOperationKey" name="should create an asyncOperation key with one param" time="0" />
  <testcase classname="helpers.generateAsyncOperationKey" name="should create an asyncOperation key with multiple params" time="0" />
  <testcase classname="helpers.generateAsyncOperationKey" name="should throw an exception if a label is not provided" time="0.001" />
  <testcase classname="helpers.generateAsyncOperationKey" name="should throw an exception if a label is not a string" time="0.004" />
 </testsuite>
 <testsuite name="helpers.getAndValidateParams" timestamp="2018-11-17T12:52:53" hostname="localhost" time="0.005" errors="0" tests="3" skipped="0" disabled="0" failures="0">
  <testcase classname="helpers.getAndValidateParams" name="should validate and successfully return correct asyncOperation params" time="0.004" />
  <testcase classname="helpers.getAndValidateParams" name="should validate and fail on an undefined param" time="0" />
  <testcase classname="helpers.getAndValidateParams" name="should validate and fail on a missing param" time="0.001" />
 </testsuite>
 <testsuite name="helpers.makeConstantsObject" timestamp="2018-11-17T12:52:53" hostname="localhost" time="0.015" errors="0" tests="2" skipped="0" disabled="0" failures="1">
  <testcase classname="helpers.makeConstantsObject" name="should make a constants object out of an array of string values" time="0.001" />
  <testcase classname="helpers.makeConstantsObject" name="should make a constants object that is immutable" time="0.014">
   <failure type="exception" message="TypeError: Cannot assign to read only property &apos;APPLE&apos; of object &apos;#&lt;Object&gt;&apos;"><![CDATA[TypeError: Cannot assign to read only property 'APPLE' of object '#<Object>'
    at Object.it (/Users/dlombardi/Code/asyncOperationsManager/lib/__tests__/helpers_test.js:131:7)
    at Object.asyncJestTest (/Users/dlombardi/Code/asyncOperationsManager/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)
    at resolve (/Users/dlombardi/Code/asyncOperationsManager/node_modules/jest-jasmine2/build/queue_runner.js:56:12)
    at new Promise (<anonymous>)
    at mapper (/Users/dlombardi/Code/asyncOperationsManager/node_modules/jest-jasmine2/build/queue_runner.js:43:19)
    at promise.then (/Users/dlombardi/Code/asyncOperationsManager/node_modules/jest-jasmine2/build/queue_runner.js:87:41)
    at process._tickCallback (internal/process/next_tick.js:68:7)]]>
   </failure>
  </testcase>
 </testsuite>
</testsuites>